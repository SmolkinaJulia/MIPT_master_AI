%Пример файла сценария (script) MATLAB

close all % закрываются все графические окна, очищается экран
% консоли
clear all % удаляет все текущие переменные из памяти
% clear x y z

7+8/2 
(7+8)/2                 
4+5/3+2   
5^3/2    
27^(1/3)+32^0.2  
27^1/3+32^0.2  

%Можно перенести на новую строку с помощью знака многоточия «...» 

0.7854-(0.7854)^3/(1*2*3)+...
    0.785^5/(1*2*3*4*5)-...
    0.785^7/(1*2*3*4*5*6*7)

s=1-1/2+1/3-1/4+1/5-1/6+1/7+ ...
1/8+1/9-1/10+1/11-1/12

% Изменение формата вывода 
% format long; %более точное
% format short; %текущее, до 4 знака после запятой

format compact; % Удаляет пустые строки для вывода на экран большого числа строк с информацией
format loose;% добавляет пустые линии, противоположность compact

%для отделения дробной части мантиссы числа 
%используется десятичная точка 
a=1.2

%десятичный показатель числа записывается в виде
%целого числа после предшествующей записи символа "е"
2e+3

eps

% Умножение. Сложение. Возведение в степень
f=3*4+2^2*a
clear f;

% Вычисление квадратного корня
sqrt(64) %(аргументом является число)
sqrt(50+14*3) %(аргументом является выражение)
sqrt(54+9*sqrt(100))  %(аргумент содержит функцию)
(15+600/4)/sqrt(121)  %(функция включена в выражение)

%  Тригонометрические функции.	пи радиан = 180°
sin(pi/6)
sind(30) % синус угла x (x в градусах)
cos(pi/3)
cosd(30) % косинус угла x (x в градусах)
%представление в дробно-рациональнм виде
rat(2.1)
 
%Экспонента
exp(1)

%Запись комплексного числа
d=3+sqrt(2)*i
abs(-1) % абсолютное значение
abs(d)

rem(5,2) % Остаток от деления
floor(4.2) %округление к ближайшему целому в сторону отрицательной бесконечности;
ceil(4.2) %округление к ближайшему целому в сторону положительной бесконечности
round(4.2) %обычное округление числа Z к ближайшему целому



%Вектора
Yr=[1984,1986,1988]
val=[10;9;8]

x=[1:2:13]
z=[-3:7]
xa=[21:-3:6]

va=linspace(0,8,6)
vb=linspace(30,10,11)


% Задание матриц
A1 = [1,2,3; 4 5 6; 7 8 9]
A2 = [10;11;12] % вектор-столбец
A3 = [14 15; 16 17; 18 19]
A4=[7 8 9;10 11 12; 4 5 6]
A = [A1, A2, A3] %горизонтальная конкатенация

e=3;
cd=6;
h=4
Mat=[e,cd*h,cos(pi/3);h^2,sqrt(h*h/cd),14]


B1 = [1 2 3 4 5] % вектор-строка
B2 = [6 7 8 9 10; 11 12 13 14 15]
B3 = [17 18 19 20 21]
B = [B1; B2; B3] % вертикальная конкатенация 

 % введения вектора, значения элементов которого 
 %составляют арифметическую прогрессию.
X = [1:1:4; 5:8; 9:12] 
Y = [1:2:4; 5:2:8; 9:2:12]

A=[1:2:11;0:5:25;linspace(10,60,6);67 2 43 68 4 13]
 
%Индексация массивов
vec=[35 46 34];
vec(2) % вывод второго элемента;
vec(2)^2+vec(3)

v=[4 15 8 12 56 75]
u=v(3:6)
X(2,3) % индексация, вывод элемента

%необходимо из матрицы А образовать матрицу В размером
%(2*2), которая состоит из элементов левого нижнего угла матрицы А
R = A(2:3, 1:2)

%Аналогично можно вставить матрицу В в верхнюю середину матрицы А:
A(1:2,5:6)=R

%end - крайний индекс массива
A(2:end,2:end)

%Представление матрицы в виде вектора
v = A(:)

% Выбор определенных элементов
V=4:3:34
U=V([3,5,7:10])
A=[10:-1:4;ones(1,7);2:2:14;zeros(1,7)]
B=A([1,3],[1,3,5:7])

%Добавление новых элементов к массиву

DF=1:4 %вектор из 4-х элементов
DF(5:10)=10:5:35
AD=[5 7 2] % вектор из трех элементов
AD(8)=4
AR(5)=24

RE=[3 8 1 24]
GT=4:3:16;
KNH=[RE GT]
KNF=[RE';GT']

%Добавление элементов к матрице
E=[1 2 3 4;5 6 7 8]
E(3,:)=[10:4:22]
K=eye(3)
G=[E K]
AW=[3 6 9;8 5 11]
AW(4,5)=17
BG(3,4)=15

%Удаление элементов

Kt=[2 8 40 65 3 55 23 15 75 80]
Kt(6)=[]
Kt(3:6)=[]
Mtr=[5 78 4 24 9;4 0 36 60 12;56 13 5 89 3]
Mtr(:,2:4)=[]

M=[16 2 3 13;5 11 10 8;9 7 6 12;4 14 15 1]
%Удалим второй столбец, используя оператор : (двоеточие):
M(:,2)=[]
%А теперь, используя оператор : (двоеточие), удалим вторую строку:
M(2,:)=[]

%Транспонирование
AA=[2 1;2 4;1 3];
AA'



A0=ones(3) % матрца из единиц размера 3 на 3
E=eye(3) % единичная матрица размера 3 на 3
Z=zeros(4) % нулевая матрица размера 4 на 4
S=rand(2,3) % матрица случайных значений размера 2 на 3
rand
rand(1,4) % создает матрицу размером (М*N) из случайных чисел, равно-
%мерно распределенных в диапазоне от 0 до 1.
randi(20,2,2) 
randi([50 90],3,4) %генерирует матрицу 3 на 4 из случайных чисел между 50 и 90.

%функция magic(n) задает магическую матрицу размера nn из натуральных чисел от 1 до n2, у которой сумма всех столбцов,
%всех строк и даже диагоналей равна одному и тому же числу.
L=magic(3) 
%Сумма по столбцам
sum(L)
%Сумма по строкам
sum(L')
%Сумма диагональных элементов
sum(diag(L)) %trace(L)
diag(L,1) % диагональ, сдвинутая вверх относительно главной
flipud(L) %переставляет строки заданной матрицы А относительно горизонтальной оси
 
v=[2,3]
X=diag(v,2)
X=[2,5,45,6;3,5,4,9;7,9,4,8;5,66,45,2]
v=diag(X,0)

A=randi(30,3,6)
S=reshape(A,[9,2])
S=reshape(A, 9, [])

% Строки ("") и символы ('') как переменные
a='Forty 8'
b='His name is John'
str="His name is John. Her name is Anna"
b(7)
b(13:16)
str(1)
n = strlength(str)
d1=['two';'one']
d1(2,1)
d1(1,1)
d2=['two','one']

s1=["two";"one"]
s1(2)
s1(1)
s2=["two","one"]
s2(2)


A=[5 -3 8;9 2 10]
B=[10 7 4;-11 15 1]
A-B
C=A+B
VectA=[8 5 4]
% VectA+A % здесь будет ошибка 
%из-за несоотвествия размерности!
VectA+4
A
A-5

%Умножение ведется по правилам линейной алгебры

[1 2]*[1;1]

X=[1 2]
Y=[2; 4]

X*Y % умножение векторов

A=[5 -3 8;9 2 10;3 4 5]
5*A

X=[1 2]
Y=[2 5]
X.*Y

A^-1
inv(A)
A*A^-1


B2/B1 % ( деление, решение уравнения xA = B, x=B/A) 
B2/B1*B1
B2

B2/2 %деление на число всех элементов матрицы

X=[1 2]
Y=[2 5]
Z = X./Y % поэлементное деление
Z = X.\Y % поэлементное обратное деление


V=[1 2 3 4]
length(V) % длина  вектора
size(B) % размер матрицы
size(B,1)
length(B) % число столбцов матрицы

exp(B1) %пожлементные операции, exp, корень увадратный
sqrt(B1)

V.^2  %поэлементные операции, возведение в степень, прибавление числа
V+2


%Нормы
norm([3 4]) % евклидова норма
n = norm(C) %returns the 2-norm or maximum singular value of matrix X

%Определитель
det([1 2;3 5])
det(A1) % определитель

%Поэлементные операции
C=[-1/3 2/3; 4.99 5.01]
floor(C)
ceil(C)
rem(A1,2) % Остаток от деления
abs(C) % абсолютное значение


A=randi(30,3,3)
mean(A) % возвращает среднее значение элементов вектора
max (A) % самый большой элемент вектора A или вектор-строка из самых больших элементов каждого столбца матрицы A.
[d,n]=max(A) % самый большой элемент d и его первая позиция
min(A) % наименьший элемент
sum(A) % сумма элементов вектора
sort(A) % располагает элементы вектора в порядке возрастания
median(A) % возвращает медианное значение элементов вектора
std(A) % стандартное отклонение элементов вектора

a=[3 4 5]
b=[1 1 2]
dot(a,b) % скалярное произведение двух векторов
c=cross(a,b) % вычисляет векторное произведение двух векторов (должны быть размерности 3), дает новый вектор, перпендикулярный обоим.
dot(a,c)
dot(b,c)
inv(A) % возвращает обратную для квадратной матрицы A





% Работа с множествами
A1 = [1,2,3; 4 5 6; 7 8 9]
A2 = [10;11;12] % вектор-столбец
A3 = [14 15; 16 17; 18 19]
A4=[7 8 9;10 11 12; 4 5 6]
A = [A1, A2, A3] %горизонтальная конкатенация


ismember(4,A)
ismember([0 3 5 20],A) % входит ли элемент вектора в множество A?
setdiff(A1,A4,'rows') % те строки, которые не содержатся в матрице A4


%возвращает пересечение множеств для двух векторов a и b,
%то есть общие элементы векторов a и b. 
intersect(A1,A4)

%intersect(a,b,'rows') – возвращает строки, 
%общие для а и b, когда a и b представляют собой матрицы с одинаковым числом столбцов;
intersect(A1,A4,'rows') 

[c,ia,ib] = intersect(A1,A4)
[c,ia,ib] = intersect(A1,A4,'rows')

a=[2,4,-4,9,0]
b=[2,5,4]
[c,ia,ib]=union(a,b)


%Оператор сравнения
M
M<6
%Логические операторы
all(M) %Верно, если все элементы вектора не равны нулю 
any([0 0 0]) %Determine if any array elements are nonzero. Верно, если не все элементы вектора равны нулю 
any([1 0 0]) 

Year=input('Введите значение переменной');
Year

%Пользовательские функции
e=0.01
A_fun=@(e) A0+e*A1;
A_fun(e)

% Вывод строки
fprintf('Hello "World"!')
'Hello "World"!'
fprintf('Переменная e равна %s',e)



clear all
close all 
% удаляются все текущие переменные из памяти MATLAB,закрываются все графические окна, очищается экран консоли
f = [3 1 2];% задаётся вектор длины три
A = -[1 1 1; 2 1 -1];% строки матрицы разделяются точкой с запятой
b = -[1 -1];
% появляются знаки -, 
%так как ограничения-неравенства Ax>=B приводятся к виду
%Ax<=B
Aeq = [1 -1 1];
beq = [0];
lb = zeros(1,3);% задаётся нулевой вектор длины три
ub = [1 1 1];

[x,fval] = linprog(f,A,b,Aeq,beq,lb,ub);
x
fval

